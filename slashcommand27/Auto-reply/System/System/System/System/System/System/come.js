const { 
    ChatInputCommandInteraction, 
    Client, 
    SlashCommandBuilder, 
    PermissionsBitField 
} = require("discord.js");

module.exports = {
    ownersOnly: false,
    data: new SlashCommandBuilder()
        .setName("come")
        .setDescription("ุงุณุชุฏุนุงุก ุดุฎุต")
        .addUserOption(option => 
            option
                .setName("user")
                .setDescription("ุงูุดุฎุต ุงููุฑุงุฏ ุงุณุชุฏุนุงุฆู")
                .setRequired(true)
        ),

    /**
     * @param {ChatInputCommandInteraction} interaction
     * @param {Client} client
     */
    async execute(interaction, client) {
        try {
            // ุชุญูู ูู ุงูุตูุงุญูุฉ
            if (!interaction.member.permissions.has(PermissionsBitField.Flags.ManageMessages)) {
                return interaction.reply({ content: `**ูุง ุชูุชูู ุตูุงุญูุฉ ููุนู ุฐูู**`, ephemeral: true });
            }

            await interaction.deferReply({ ephemeral: false });

            const user = interaction.options.getUser("user");

            user.send({
                content: `**๐ฉ ุชู ุงุณุชุฏุนุงุคู ุจูุงุณุทุฉ: ${interaction.user.tag}\n๐ ูู ุงูุฑูู: ${interaction.channel}**`
            }).then(() => {
                return interaction.editReply({ content: `โ **ุชู ุฅุฑุณุงู ุงูุงุณุชุฏุนุงุก ููุดุฎุต ุจูุฌุงุญ**` });
            }).catch(() => {
                return interaction.editReply({ content: `โ **ูู ุฃุณุชุทุน ุฅุฑุณุงู ุฑุณุงูุฉ ุฎุงุตุฉ ููุดุฎุต (ูุฏ ูููู ูุงูู ุงูุฎุงุต)**` });
            });

        } catch (error) {
            console.error("๐ด | Error in come command:", error);
            return interaction.editReply({ content: `โ **ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงูุชูููุฐ**` });
        }
    }
};
